{"version":3,"sources":["actions/index.js","components/ToDoForm.jsx","components/ToDoItem.jsx","components/ToDoList.jsx","components/ToDoFilter.jsx","components/App.jsx","components/Help.jsx","components/NotFound.jsx","components/Router.jsx","reducers/index.js","index.js","modules/Storage.js"],"names":["SET_FILTER","ADD_TODO","UPDATE_TODO_TEXT","TOGGLE_TODO","REMOVE_TODO","filters","ALL","DONE","UNDONE","ToDoForm","textInput","React","createRef","handleSubmit","event","preventDefault","text","_this","current","value","trim","props","addToDo","currentTarget","reset","react_default","a","createElement","className","onSubmit","this","type","placeholder","ref","aria-hidden","Component","connect","state","ToDoItem","keyCode","target","blur","todo","data","console","log","data-id","uuid","id","concat","checked","done","onChange","toggleToDone","htmlFor","updateToDoText","onKeyUp","handleInputKeyUp","onClick","removeToDo","ToDoList","filteredItems","itemsFiltered","items","item","filter","push","map","components_ToDoItem","key","toDoItems","ToDoFilter","role","aria-label","Object","keys","filterKey","setFilter","App","components_ToDoForm","components_ToDoFilter","components_ToDoList","Help","document","title","NotFound","Router","BrowserRouter","Switch","Route","exact","path","component","appReducer","combineReducers","arguments","length","undefined","actions","action","objectSpread","defineProperty","nextState","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","render","es","components_Router","querySelector"],"mappings":"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","file":"static/js/main.a62a1463.chunk.js","sourcesContent":["export const SET_FILTER = \"SET_FILTER\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const UPDATE_TODO_TEXT = \"UPDATE_TODO_TEXT\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\n\nexport const filters = {\n  ALL: \"all\",\n  DONE: \"done\",\n  UNDONE: \"undone\"\n};\n\nexport const setFilter = filter => {\n  return { type: SET_FILTER, filter };\n};\n\nexport const addToDo = text => {\n  return { type: ADD_TODO, text };\n};\n\nexport const updateToDoText = (uuid, text) => {\n  return { type: UPDATE_TODO_TEXT, uuid, text };\n};\n\nexport const removeToDo = uuid => {\n  return { type: REMOVE_TODO, uuid };\n};\n\nexport const toggleToDone = uuid => {\n  return { type: TOGGLE_TODO, uuid };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToDo } from \"../actions/index\";\n\nclass ToDoForm extends React.Component {\n  textInput = React.createRef();\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    //console.log(`I've been submitted with this input: ${this.textInput.current.value}`);\n    const text = this.textInput.current.value.trim();\n    this.props.addToDo(text);\n    event.currentTarget.reset()\n  };\n\n  render() {\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Add new item ...\"\n          ref ={this.textInput}\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            <i className=\"fas fa-plus\" aria-hidden=\"true\" />&nbsp;Add item\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n/*\n----REACT----\nclass ToDoForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  textInput = React.createRef();\n\n   handleSubmit = e => {\n    e.preventDefault();\n    const text = this.textInput.current.value.trim();\n    this.props.addToDo(text);\n    e.currentTarget.reset();\n  };\n  \n  render() {\n    return (\n      <form className=\"input-group my-3\" onSubmit={this.handleSubmit}>\n        <input\n          className=\"form-control\"\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Add a new to-do item ...\"\n          ref={this.textInput}\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-outline-secondary\" type=\"submit\">\n            <i className=\"fas fa-plus\" aria-hidden=\"true\" />&nbsp;Add item\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ToDoForm;\n*/\n\nexport default connect(state => ({}), {\n  addToDo\n})(ToDoForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateToDoText, toggleToDone, removeToDo } from \"../actions/index\";\n\n\nclass ToDoItem extends React.Component {\n  handleInputKeyUp(event) {\n    if (event.keyCode === 13) {\n      event.target.blur();\n    }\n  }\n\n  render() {\n    const todo = this.props.data;\n    console.log(todo);\n\n    return (\n      <tr className=\"todo-item\" data-id={todo.uuid}>\n        <td>\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              className=\"custom-control-input\"\n              value={todo.uuid}\n              id={`todo-done-${todo.uuid}`}\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={(event) => this.props.toggleToDone(todo.uuid)}\n            />\n            <label\n              className=\"custom-control-label\"\n              htmlFor={`todo-done-${todo.uuid}`}\n            >\n              &nbsp;\n            </label>\n          </div>\n        </td>\n        <td className=\"col-1\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={todo.text}\n            onChange={event => {\n              this.props.updateToDoText(todo.uuid, event.target.value);\n            }}\n            onKeyUp={event => {\n              this.handleInputKeyUp(event);\n            }}\n          />\n        </td>\n        <td className=\"col-action\">\n          <i\n            className=\"icon-remove far fa-trash-alt\"\n            onClick={event => this.props.removeToDo(todo.uuid, console.log(event))}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n/*\nclass ToDoItem extends React.Component {\n  handleInputKeyUp(e) {\n    // Remove focus, when the [Enter] key is pressed\n    if (e.keyCode === 13) {\n      e.target.blur();\n    }\n  }\n\n  render() {\n    const todo = this.props.data;\n\n    return (\n      <tr className=\"todo-item\" data-id={todo.uuid}>\n        <td>\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              className=\"custom-control-input\"\n              defaultValue={todo.uuid}\n              id={`todo-done-${todo.uuid}`}\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={this.props.toggleToDoDone}\n            />\n            <label\n              className=\"custom-control-label\"\n              htmlFor={`todo-done-${todo.uuid}`}\n            >\n              &nbsp;\n            </label>\n          </div>\n        </td>\n        <td className=\"col-1\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={todo.text}\n            onChange={e => {\n              this.props.updateToDoText(todo.uuid, e.target.value);\n            }}\n            onKeyUp={e => {\n              this.handleInputKeyUp(e);\n            }}\n          />\n        </td>\n        <td className=\"col-action\">\n          <i\n            className=\"icon-remove far fa-trash-alt\"\n            onClick={e => this.props.removeToDo(todo.uuid)}\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ToDoItem;\n*/\n\nexport default connect(state => (console.log(state),{}), {\n  updateToDoText,\n  toggleToDone,\n  removeToDo\n})(ToDoItem);\n","import React from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport { connect } from \"react-redux\";\n\nclass ToDoList extends React.Component {\n  filteredItems = () => {\n    let itemsFiltered = [];\n\n    for (const uuid in this.props.items) {\n      const item = this.props.items[uuid];\n\n      if (\n        this.props.filter === \"all\" ||\n        (this.props.filter === \"done\" && item.done === true) ||\n        (this.props.filter === \"undone\" && item.done === false)\n      ) {\n        itemsFiltered.push(item);\n      }\n    }\n\n    return itemsFiltered;\n  };\n\n  render() {\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items table table-borderless\">\n          <tbody>\n            {this.filteredItems().map(item => {\n              return <ToDoItem key={`todo-item-${item.uuid}`} data={item} />;\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n/*\nclass ToDoList extends React.Component {\n  filteredItems = () => {\n    const filtered = [];\n\n    for (const uuid in this.props.items) {\n      const item = this.props.items[uuid];\n\n      if (\n        this.props.filter === \"all\" ||\n        (this.props.filter === \"done\" && item.done === true) ||\n        (this.props.filter === \"undone\" && item.done === false)\n      ) {\n        filtered.push(item);\n      }\n    }\n\n    return filtered;\n  };\n\n  render() {\n    return (\n      <div className=\"todo-list\">\n        <table className=\"todo-items table table-borderless\">\n          <tbody>\n            {this.filteredItems().map(item => (\n              <ToDoItem\n                key={`todo-item-${item.uuid}`}\n                data={item}\n                updateToDoText={this.props.updateToDoText}\n                toggleToDoDone={this.props.toggleToDoDone}\n                removeToDo={this.props.removeToDo}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ToDoList;\n*/\n\nexport default connect(state => ({\n  items: state.toDoItems,\n  filter: state.filter\n}))(ToDoList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {filters, setFilter} from \"../actions/index\";\n\nclass ToDoFilter extends React.Component {\n  render() {\n    return (\n      <div className=\"todo-filters text-right\">\n        <div\n          className=\"btn-group btn-group-sm\"\n          role=\"group\"\n          aria-label=\"Set a filter to show items\"\n        >\n          {Object.keys(filters).map(filterKey => {\n            const filter = filters[filterKey];\n\n            return (\n              <button\n                type=\"button\"\n                className={`btn btn-light ${\n                  this.props.filter === filter ? \"active\" : \"\"\n                }`}\n                onClick={event => {\n                  console.log(event);\n                  this.props.setFilter(filter);\n                }}\n                key={filterKey}\n              >\n                {filter}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    filter: state.filter\n  }),\n  {\n    setFilter\n  }\n)(ToDoFilter);\n/*\nclass ToDoFilter extends React.Component {\n  filters = [\"all\", \"undone\", \"done\"];\n\n  render() {\n    return (\n      <div className=\"todo-filters text-right\">\n        <div\n          className=\"btn-group btn-group-sm\"\n          role=\"group\"\n          aria-label=\"Set a filter to show items\"\n        >\n          {this.filters.map(filter => (\n            <button\n              type=\"button\"\n              className={`btn btn-light ${\n                this.props.activeFilter === filter ? \"active\" : \"\"\n              }`}\n              onClick={e => {\n                this.props.setFilter(filter);\n              }}\n              key={filter}\n            >\n              {filter}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoFilter;\n*/","import React from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoFilter from \"./ToDoFilter\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n      <h1>Things to do... (or NOT)</h1>\n        <ToDoForm />\n        <ToDoFilter />\n        <ToDoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.storageKey = this.props.storageKey || \"react-todo\";\n    const old = Storage.get(this.storageKey);\n\n    if (old) {\n      this.state = JSON.parse(old);\n    } else {\n      this.state = {\n        toDoItems: {},\n        filter: \"undone\"\n      };\n\n      Storage.set(this.storageKey, JSON.stringify(this.state));\n    }\n  }\n\n  componentDidUpdate() {\n    Storage.set(this.storageKey, JSON.stringify(this.state));\n  }\n\n  addToDo = text => {\n    const todo = {\n      uuid: uuid(),\n      text: text,\n      done: false\n    };\n\n    this.setState(state => {\n      state.toDoItems[todo.uuid] = todo;\n      return state;\n    });\n  };\n\n  updateToDoText = (uuid, text) => {\n    this.setState(state => {\n      state.toDoItems[uuid].text = text;\n      return state;\n    });\n  };\n\n  toggleToDoDone = event => {\n    const checkbox = event.target;\n\n    this.setState(state => {\n      state.toDoItems[checkbox.value].done = checkbox.checked;\n      return state;\n    });\n  };\n\n  removeToDo = uuid => {\n    this.setState(state => {\n      delete state.toDoItems[uuid];\n      return state;\n    });\n  };\n\n  setFilter = filter => {\n    this.setState(state => {\n      state.filter = filter;\n      return state;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header tagline=\"Here are all the next tasks.\" />\n        <ToDoForm addToDo={this.addToDo} />\n        <ToDoFilter\n          activeFilter={this.state.filter}\n          setFilter={this.setFilter}\n        />\n        <ToDoList\n          items={this.state.toDoItems}\n          filter={this.state.filter}\n          updateToDoText={this.updateToDoText}\n          toggleToDoDone={this.toggleToDoDone}\n          removeToDo={this.removeToDo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n*/\n","import React from \"react\";\n\nclass Help extends React.Component {\n  componentDidMount() {\n    document.title = \"Help | What to do?\";\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <dl>\n          <dt>Where is the data stored?</dt>\n          <dd>We store all information in your browser's LocalStorage.</dd>\n        </dl>\n      </div>\n    );\n  }\n}\n\nexport default Help;","import React from \"react\";\n\nclass NotFound extends React.Component {\n  componentDidMount() {\n    document.title = \"Error 404 | What to do?\";\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-warning\">\n          <strong>\n            Ooops .... sorry!<br />\n          </strong>\n         Error 404 - The requested page could not be found.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport Help from \"./Help\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/help\" component={Help} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;","import { combineReducers } from \"redux\";\nimport * as actions from \"../actions/index\";\nimport uuid from \"uuid/v4\";\n\nfunction filter(state = actions.filters.ALL, action) {\n  switch (action.type) {\n    case actions.SET_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n}\n\nfunction toDoItems(state = {}, action) {\n  switch (action.type) {\n    case actions.ADD_TODO:\n      const id = uuid();\n\n      return {\n        ...state,\n        [id]: {\n          uuid: id,\n          text: action.text,\n          done: false\n        }\n      };\n    case actions.UPDATE_TODO_TEXT:\n      return {\n        ...state,\n        [action.uuid]: {\n          ...state[action.uuid],\n          text: action.text\n        }\n      };\n    case actions.TOGGLE_TODO:\n      return {\n        ...state,\n        [action.uuid]: {\n          ...state[action.uuid],\n          done: !state[action.uuid].done\n        }\n      };\n    case actions.REMOVE_TODO:\n      let nextState = { ...state };\n      delete nextState[action.uuid];\n\n      return nextState;\n    default:\n      return state;\n  }\n}\nconst appReducer = combineReducers({\n  filter,\n  toDoItems\n});\n\nexport default appReducer;","import React from \"react\";\nimport { render } from \"react-dom\";\n//React\nimport Router from \"./components/Router\";\n//Components\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport appReducer from \"./reducers/index\";\nimport { loadState, saveState } from \"../src/modules/Storage\";\n//Reduxxx\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./sass/style.scss\";\n//styleshits\n\nconst store = createStore(\n  appReducer,\n  loadState(),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nrender(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.querySelector(\"#main\")\n);\n\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"react-todo-state\");\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"react-todo-state\", serializedState);\n  } catch (err) {\n    // ignore write errors\n  }\n};\n/*\nclass Storage {\n  constructor() {\n    if (!this.canUseLocalStorage()) {\n      throw Error(\"The local storage is disabled or full!\");\n    }\n  }\n\n  set(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  get(key, defaultValue = null) {\n    const value = localStorage.getItem(key);\n\n    if (value !== null) {\n      return value;\n    }\n\n    return defaultValue;\n  }\n\n  canUseLocalStorage() {\n    var test = \"test\";\n\n    try {\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default new Storage();\n*/"],"sourceRoot":""}